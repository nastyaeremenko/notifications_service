version: "3.8"
services:
    rabbitmq3:
        container_name: rabbitmq-notification
        image: rabbitmq:3.8-management-alpine
        ports:
            - '5672:5672'
            - '15672:15672'
        volumes:
            - rabbit-data:/var/lib/rabbitmq/
            - rabbit-log:/var/log/rabbitmq

    db:
        container_name: postgres-notification
        image: postgres:13
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - '5432:5432'
        env_file:
            - prod.env

    cron_job:
        build:
            context: .
            dockerfile: cron_job/Dockerfile
        container_name: cron-job
        working_dir: /cron_job/
        volumes:
            - ./cron_job:/cron_job/
        env_file:
            - prod.env
        depends_on:
            - rabbitmq3
            - db
        command: python main.py

    worker:
        build:
            context: .
            dockerfile: ./worker/Dockerfile
        container_name: worker
        restart: on-failure
        volumes:
            - ./worker:/usr/src/worker
        env_file:
            - prod.env
        depends_on:
            - rabbitmq3
            - db


volumes:
  rabbit-data:
  rabbit-log:
  postgres_data:
      name: postgres_data
