version: '3.9'

services:
    rabbitmq3:
        container_name: rabbitmq-notification
        image: rabbitmq:3.8-management-alpine
        ports:
            - '5672'
            - '15672'
        volumes:
            - rabbit-data:/var/lib/rabbitmq/
            - rabbit-log:/var/log/rabbitmq

    db:
        container_name: postgres-notification
        image: postgres:13
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        command: -p $POSTGRES_PORT
        env_file:
            - prod.env

    cron_job:
        build:
            context: .
            dockerfile: cron_job/Dockerfile
        container_name: cron-job
        volumes:
            - ./cron_job:/cron_job/
        environment:
            - WAIT_HOSTS=rabbitmq3:5672
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
        env_file:
            - prod.env
        depends_on:
            - rabbitmq3
            - db

    worker:
        build:
            context: .
            dockerfile: ./worker/Dockerfile
        container_name: worker
        restart: on-failure
        volumes:
            - ./worker:/usr/src/worker
        environment:
            - WAIT_HOSTS=rabbitmq3:5672
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
        env_file:
            - prod.env
        depends_on:
            - rabbitmq3
            - db

volumes:
  rabbit-data:
  rabbit-log:
  postgres_data:
      name: postgres_data
